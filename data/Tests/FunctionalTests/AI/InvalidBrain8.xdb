<?xml version="1.0" encoding="UTF-8"?>
<gameMechanics.world.mob.behaviour.brain.MobBrainResource>
  <Header>
		<resourceId>30417</resourceId>
	</Header>
	<memoryVariables>
		<Item type="gameMechanics.world.mob.behaviour.components.variables.BoolVariable">
			<name>pursuitToComfort</name>
			<value>false</value>
		</Item>  
	</memoryVariables>
	<!--==============================================================================================-->
  <!--============================================STATES============================================-->
  <!--==============================================================================================-->
  <root type="gameMechanics.world.behaviour.genericBrain.AIStatesGroupNode">
    <name>Root</name>
		<groupType>Dynamic</groupType>
    <subnodes>

      <!--1-->
      <Item type="gameMechanics.world.behaviour.genericBrain.AIStateNodeSingle">
        <name>AttackState</name>
				<state type="gameMechanics.world.mob.behaviour.components.states.AIStateAttack">
					<moveType name="moveType"/>
					<pursuitToComfort name="pursuitToComfort"/>
				</state>
        <mandatory>
          <Item/>
          <Item/>          
          <Item/>
        </mandatory>
      </Item>
      <!--1-->
      <Item type="gameMechanics.world.behaviour.genericBrain.AIStateNodeSingle">
        <name>DeadState</name>
				<state type="gameMechanics.world.mob.behaviour.components.states.AIStateIdle"/>
        <optional>
          <Item>
            <to>AttackState</to>
            <pipe type="gameMechanics.world.mob.behaviour.components.pipes.UniversalEventHandlerPipe">
              <eventType>gameMechanics.elements.events.EventRevive</eventType>
            </pipe>
          </Item>
        </optional>
      </Item>
    </subnodes>
    <initialState>DeadState</initialState>
    <exitTypes>
      <Item>
        <type>gameMechanics.world.behaviour.basicComponents.TargetProvider</type>
      </Item>
      <Item>
        <type>gameMechanics.world.behaviour.basicComponents.AIState</type>
      </Item>
    </exitTypes>
		<mandatory>
			<Item/>
			<Item/>
		</mandatory>
		<exitsRemap>
      <Item>
        <from>0</from>
        <exit>0</exit>
        <groupExit>1</groupExit>
      </Item>
			<Item>
        <from>0</from>
        <exit>1</exit>
        <groupExit>1</groupExit>
      </Item>
      <Item>
        <from>0</from>
        <exit>2</exit>
        <groupExit>1</groupExit>
      </Item>
		</exitsRemap>
  </root>

</gameMechanics.world.mob.behaviour.brain.MobBrainResource>
