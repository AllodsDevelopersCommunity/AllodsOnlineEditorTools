<?xml version="1.0" encoding="UTF-8"?>
<gameMechanics.world.mob.behaviour.brain.MobBrainResource>
  <Header>
		<resourceId>30412</resourceId>
	</Header>
	<!--==============================================================================================-->
  <!--============================================STATES============================================-->
  <!--==============================================================================================-->
  <root type="gameMechanics.world.behaviour.genericBrain.AIStatesGroupNode">
    <name>Root</name>
		<groupType>Static</groupType>
    <subnodes>
      <!--0-->
      <Item type="gameMechanics.world.behaviour.genericBrain.AIStatesGroupNode">
        <name>AliveStatesGroup</name>
				<groupType>Static</groupType>
        <subnodes>
          <!--0-->
          <Item type="gameMechanics.world.behaviour.genericBrain.AIStateNodeSingle">
            <name>WaitAvatar</name>
						<state type="gameMechanics.world.mob.behaviour.components.states.AIStateWaitAvatar"/>
          </Item>

          <!--1-->
          <Item type="gameMechanics.world.behaviour.genericBrain.AIStateNodeSingle">
            <name>ReturnState</name>
						<state type="gameMechanics.world.mob.behaviour.components.states.AIStateReturn">
							<interruptPos name="interruptPos"/>
							<moveType name="moveType"/>
						</state>
            <reaction type="gameMechanics.world.mob.behaviour.brain.MobBrainReaction">
              <effects>
                <Item type="gameMechanics.elements.effects.DamageZeroSuppressor"/>
                <Item type="gameMechanics.elements.effects.ImmunityToAllBuffs"/>
                <Item type="gameMechanics.elements.effects.EffectSpeedModifier">
									<effectScaler type="gameMechanics.elements.scalers.ExponentialEffectScaler">
										<base>2</base>
									</effectScaler>
                </Item>
              </effects>
            </reaction>
            <mandatory>
              <Item>
                <to>WaitAvatar</to>
              </Item>
              <Item>
                <to>WaitAvatar</to>
              </Item>
            </mandatory>
          </Item>

          <!--2-->
          <Item type="gameMechanics.world.behaviour.genericBrain.AIStateNodeSingle">
            <name>TalkState</name>
						<state type="gameMechanics.world.mob.behaviour.components.states.AIStateTalk">
							<interlocutors name="interlocutors"/>
						</state>
            <mandatory>
              <Item>
                <to>WaitAvatar</to>
                <pipe type="gameMechanics.world.mob.behaviour.components.pipes.TargetAddressPipe"/>
              </Item>
            </mandatory>
            <optional>
              <Item>
                <to>ReturnState</to>
                <pipe type="gameMechanics.world.mob.behaviour.components.pipes.UniversalEventHandlerPipe">
                  <eventType>gameMechanics.world.mob.behaviour.aiMsgs.MsgReturnToIdle</eventType>
                </pipe>
              </Item>
            </optional>
          </Item>
        </subnodes>


        <initialState>WaitAvatar</initialState>
        <optional>
          <Item>
            <to>DeadState</to>
            <pipe type="gameMechanics.world.mob.behaviour.components.pipes.UniversalEventHandlerPipe">
              <eventType>gameMechanics.elements.events.EventDeath</eventType>
            </pipe>
          </Item>
        </optional>
      </Item>

      <!--1-->
      <Item type="gameMechanics.world.behaviour.genericBrain.AIStateNodeSingle">
        <name>DeadState</name>
				<state type="gameMechanics.world.mob.behaviour.components.states.AIStateIdle"/>
        <optional>
          <Item>
            <to>AliveStatesGroup</to>
            <pipe type="gameMechanics.world.mob.behaviour.components.pipes.UniversalEventHandlerPipe">
              <eventType>gameMechanics.elements.events.EventRevive</eventType>
            </pipe>
          </Item>
        </optional>
      </Item>
    </subnodes>
    <initialState>DeadState</initialState>
  </root>

</gameMechanics.world.mob.behaviour.brain.MobBrainResource>
